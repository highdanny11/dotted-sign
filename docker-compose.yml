volumes:
  pgData:
  react_dist:
networks:
  bootcamp_network:
services:
  postgres:
    image: postgres:16.4-alpine3.20
    environment:
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_DATABASE}
    volumes:
      - pgData:/var/lib/postgresql/data
    ports:
      - 5432:5432
    deploy:
      replicas: 1
    networks:
      - bootcamp_network
    healthcheck:
      test:
        ["CMD-SHELL", "sh -c 'pg_isready -U ${DB_USERNAME} -d ${DB_DATABASE}'"]
      interval: 10s
      timeout: 3s
      retries: 3
  backend:
    image: highdanny11/node-dotted-sign:latest
    build: ./node-dotted-sign
    env_file:
      - .env
    volumes:
      - ./.env:/app/.env
    ports:
      - "${PORT}:${PORT}"
    networks:
      - bootcamp_network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: 3
        compress: "true"
    deploy:
      replicas: 1
    depends_on:
      postgres:
        condition: service_healthy
  frontend:
    image: highdanny11/react-dotted-sign:latest
    build: ./react-dotted-sign
    volumes:
      - react_dist:/app/dist
    networks:
      - bootcamp_network
    depends_on:
      - backend
    command: sh -c "echo Build completed"
  nginx:
    image: nginx:alpine
    volumes:
      - react_dist:/usr/share/nginx/html
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "80:80"
    depends_on:
      - frontend
      - backend
    networks:
      - bootcamp_network
